# Implementation Generic:
#spring.jpa.show-sql=true

# Show Hibernate Specific SQL:
spring.jpa.properties.hibernate.show_sql=true
# Formats SQL
spring.jpa.properties.hibernate.format_sql=true

# Show bind values - Troubleshooting:
logging.level.org.hibernate.orm.jdbc.bind=TRACE
# logs - show the parameter that are bound to the sql:
# org.hibernate.orm.jdbc.bind              : binding parameter (1:VARCHAR) <- [234234]
# org.hibernate.orm.jdbc.bind              : binding parameter (2:VARCHAR) <- [Oreilly]
# org.hibernate.orm.jdbc.bind              : binding parameter (3:VARCHAR) <- [Spring In action]
# org.hibernate.orm.jdbc.bind              : binding parameter (4:BIGINT) <- [2]

# Enable H2 web console(http://localhost:8080/h2-console) - disables the jdbc URL:
spring.h2.console.enabled=true
# Log:
# H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:e63ecf8e-8d11-4701-a96a-e586ddaccf74'


# Can set the spring profile to use by setting:
#spring.profiles.active=local
# OR
# by setting it in the active profile field of the run configuration.

spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;MODE=MYSQL;DATABASE_TO_LOWER=TRUE;CASE_INSENSITIVE_IDENTIFIERS=TRUE
spring.datasource.username=sa
spring.datasource.password=password

# MySql specific config
spring.jpa.database=mysql
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# NB:
# This setting will validate the schema in the db against the domain classes with the JPA annotations.
# With this setting when you add a new JPA enabled domain model the schema will be checked for a matching table.
# If it's missing it will report: Author table missing.
# without this setting the schema will not be validated - so only when you try to use Author class will you get an error.
spring.jpa.hibernate.ddl-auto=validate

# This will not defer the schema.sql file execution.
spring.jpa.defer-datasource-initialization=false

# DB Change Mgmt:
spring.liquibase.change-log=db/changelog/changelog-master.xml
